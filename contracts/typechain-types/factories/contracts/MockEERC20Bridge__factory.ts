/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockEERC20Bridge,
  MockEERC20BridgeInterface,
} from "../../contracts/MockEERC20Bridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "PrivateTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ViewingKeySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getInbox",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct MockEERC20Bridge.InboxItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPrivateBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "viewingKey",
        type: "string",
      },
    ],
    name: "setViewingKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferPrivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "viewingKeyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610b7a380380610b7a83398101604081905261002f916100c0565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610070565b506001600160a01b03166080526100f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d257600080fd5b81516001600160a01b03811681146100e957600080fd5b9392505050565b608051610a6161011960003960008181610197015281816102d301526104a60152610a616000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c8063c9675d7911610071578063c9675d791461012b578063ea488b8f1461013e578063f2fde38b1461016c578063faab73b21461017f578063fc0c546a14610192578063feec9ba2146101b957600080fd5b8062f714ce146100ad57806302201681146100c2578063715018a6146100eb5780638da5cb5b146100f3578063b6b55f2514610118575b600080fd5b6100c06100bb36600461084b565b6101e2565b005b6100d56100d0366004610877565b6103b8565b6040516100e29190610899565b60405180910390f35b6100c0610450565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e2565b6100c06101263660046108fb565b610464565b6100c0610139366004610914565b6105b9565b61015e61014c366004610877565b60036020526000908152604090205481565b6040519081526020016100e2565b6100c061017a366004610877565b61060e565b6100c061018d366004610986565b61064c565b6101007f000000000000000000000000000000000000000000000000000000000000000081565b61015e6101c7366004610877565b6001600160a01b031660009081526001602052604090205490565b6001600160a01b03811661022a5760405162461bcd60e51b8152600401610221906020808252600490820152630746f3d360e41b604082015260600190565b60405180910390fd5b6000821161024a5760405162461bcd60e51b8152600401610221906109b0565b33600090815260016020526040902054828110156102995760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b6044820152606401610221565b336000908152600160205260409081902084830390555163a9059cbb60e01b81526001600160a01b038381166004830152602482018590527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034091906109d2565b61037e5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610221565b60405183815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610445576000848152602090819020604080516060810182526003860290920180546001600160a01b03168352600180820154848601526002909101549183019190915290835290920191016103f0565b505050509050919050565b6104586107b2565b61046260006107df565b565b600081116104845760405162461bcd60e51b8152600401610221906109b0565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af11580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b91906109d2565b61055d5760405162461bcd60e51b81526020600482015260136024820152721d1c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606401610221565b336000908152600160205260408120805483929061057c9084906109f4565b909155505060405181815233907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c49060200160405180910390a250565b81816040516105c9929190610a1b565b60408051918290038220336000818152600360205292832091909155917f3aad3499b5d5ff0b6aa7203ef9e8e7341942476b4640b0243147bc31efa76a149190a25050565b6106166107b2565b6001600160a01b03811661064057604051631e4fbdf760e01b815260006004820152602401610221565b610649816107df565b50565b6001600160a01b03821661068b5760405162461bcd60e51b8152600401610221906020808252600490820152630746f3d360e41b604082015260600190565b600081116106ab5760405162461bcd60e51b8152600401610221906109b0565b33600090815260016020526040902054818110156106fa5760405162461bcd60e51b815260206004820152600c60248201526b1a5b9cdd59999a58da595b9d60a21b6044820152606401610221565b33600081815260016020818152604080842087870390556001600160a01b0388811680865282862080548a019055600280855283872084516060810186528981528087018c8152428288019081528354808b018555938b52978a209151600390930290910180546001600160a01b031916929095169190911784555195830195909555925193019290925590519092917f7524dcf6379bd5093094c86b278196fa96e3eecfffb35c403b424da6b7cb409c91a3505050565b6000546001600160a01b031633146104625760405163118cdaa760e01b8152336004820152602401610221565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461084657600080fd5b919050565b6000806040838503121561085e57600080fd5b8235915061086e6020840161082f565b90509250929050565b60006020828403121561088957600080fd5b6108928261082f565b9392505050565b602080825282518282018190526000919060409081850190868401855b828110156108ee57815180516001600160a01b03168552868101518786015285015185850152606090930192908501906001016108b6565b5091979650505050505050565b60006020828403121561090d57600080fd5b5035919050565b6000806020838503121561092757600080fd5b823567ffffffffffffffff8082111561093f57600080fd5b818501915085601f83011261095357600080fd5b81358181111561096257600080fd5b86602082850101111561097457600080fd5b60209290920196919550909350505050565b6000806040838503121561099957600080fd5b6109a28361082f565b946020939093013593505050565b6020808252600890820152670616d6f756e743d360c41b604082015260600190565b6000602082840312156109e457600080fd5b8151801515811461089257600080fd5b80820180821115610a1557634e487b7160e01b600052601160045260246000fd5b92915050565b818382376000910190815291905056fea264697066735822122024635c5b16b89cd6354940221e4799d1d81c65945fcb32011e4844654140ce6d64736f6c63430008180033";

type MockEERC20BridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEERC20BridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEERC20Bridge__factory extends ContractFactory {
  constructor(...args: MockEERC20BridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token_, overrides || {});
  }
  override deploy(
    token_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(token_, overrides || {}) as Promise<
      MockEERC20Bridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockEERC20Bridge__factory {
    return super.connect(runner) as MockEERC20Bridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEERC20BridgeInterface {
    return new Interface(_abi) as MockEERC20BridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockEERC20Bridge {
    return new Contract(address, _abi, runner) as unknown as MockEERC20Bridge;
  }
}
